{"version":3,"sources":["logo.svg","components/Header/Header.js","components/About/About.js","components/Product/Product.js","components/ProductsAndCart/ProductsAndCart.js","App.js","serviceWorker.js","index.js","components/Header/assets/lunch-box.svg"],"names":["module","exports","TheHeader","styled","div","HeaderIcon","img","HeaderTitle","p","Header","src","plateIcon","span","h3","button","Content","close","meal","console","log","Modal","ModalHeader","name","ModalInfo","className","description","ModalExit","onClick","TheProduct","props","width","SelectProdButton","TheButtons","ProductPhoto","Product","item","windowWidth","addToFavs","photo","modal","trigger","stuff","TheMainContent","ProductsHeader","SubmitFavsBuuton","FavHeader","h2","FavList","ul","Products","Favs","Main","useState","getWidth","setWidth","chosenItems","setFavs","userinfo","setUser","window","innerWidth","addEventListener","handleInputChange","e","target","value","id","productList","map","items","concat","placeholder","onChange","fav","filter","toggleFav","Info","theSubmitInfo","emailjs","send","then","response","status","text","error","submitFavs","TheApp","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8e70759.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport styled from 'styled-components'\nimport plateIcon from './assets/lunch-box.svg';\n\n\nconst Header = () => {\n    return (\n        <TheHeader>\n            <HeaderIcon src={plateIcon} />\n            <HeaderTitle>\n                PJ's Eats\n            </HeaderTitle>\n            {/*https://www.eatthismuch.com/food/nutrition/young-green-jackfruit-in-brine,474598/*/}\n        </TheHeader>\n    );\n};\n\nconst TheHeader = styled.div`\n  //width: 100%;\n  height: 10%;\n  background-color: #333333 ;\n  color: white;\n  display: flex;\n  padding: 0 7px;\n`;\n\nconst HeaderIcon = styled.img`\n  height: 75%;\n  align-self: center;\n`;\nconst HeaderTitle = styled.p`\n  //height: 75%;\n  align-self: center;\n  margin: auto;\n  \n`;\n\nexport default Header;\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\n\nconst About = () => {\n    const [hidden,setDisplay] = useState(true)\n\n    const toggleDisplay = () =>{\n\n        console.log(\"toggle About display\")\n        setDisplay(!hidden )\n    };\n    if (hidden){\n        return (\n           <TheAbout>\n\n               {/*<TheAboutWelcome> Welcome!! </TheAboutWelcome>*/}\n               <TheAboutDesc>\n                   Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n                   magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\n                   irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n               </TheAboutDesc>\n               <Toggle onClick={toggleDisplay}> hide </Toggle>\n\n           </TheAbout>\n        );\n    }else{\n        return (\n            <TheHiddenAbout onClick={toggleDisplay}>\n                Click Here To See Instructions\n            </TheHiddenAbout>\n        );\n    }\n};\n\nconst TheHiddenAbout = styled.div`\n  height: 5%;\n  width: 95%;\n  margin: auto;\n  background-color: #999999;\n`;\n\nconst TheAboutWelcome = styled.span`\n  font-size: 2em;\n`;\n\nconst TheAboutDesc = styled.h3`\n  font-size: 1em;\n`;\n\nconst TheAbout = styled.div`\n  height:15%;\n  width: 95%;\n  margin: auto;\n  background-color: #999999;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Toggle = styled.button`\n  float:right;\n`;\n\nexport default About;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\n\n\n\nconst Content = ({close, meal}) => {\n    console.log(meal)\n    return(\n        <Modal>\n        {/*<ModalExit className=\"close\" onClick={close}>*/}\n        {/*    &times;*/}\n        {/*</ModalExit>*/}\n        <ModalHeader> {meal.name} </ModalHeader>\n        <ModalInfo className=\"content\">\n           {/*<ModalImg src={meal.photo}/>*/}\n            {meal.description && meal.description !==\"...\" ? meal.description : \"Meal Information will go here\"}\n\n        </ModalInfo>\n            <ModalExit onClick={close}>close</ModalExit>\n    </Modal>)\n\n};\n\nconst Product = ({item,windowWidth,addToFavs}) => {\n\n    return (\n        <TheProduct width={windowWidth}>\n            <ProductPhoto src={item.photo}/>\n            <p>{item.name}</p>\n\n            <TheButtons>\n                <Popup modal trigger={<SelectProdButton >Details</SelectProdButton>}>\n                    {close => <Content close={close} meal={item} />}\n                </Popup>\n\n                <SelectProdButton onClick={()=>addToFavs(item)}>\n                    Add\n                </SelectProdButton>\n            </TheButtons>\n        </TheProduct>\n    );\n};\n\nconst ModalExit = styled.button`\n  bottom:0;\n  margin: 1em;\n  position: static;\n  width:50%;\n\n`;\nconst Modal = styled.div``;\n\nconst ModalHeader = styled.div`\n  font-size: 90%;\n  margin: 1%;\n`;\n\nconst ModalInfo = styled.div`\n  font-size: 85%;\n  margin: 1%;\n`;\n\nconst TheProduct = styled.div`\n  height: 200px;\n  width:${props => props.width > 749 ? \"45%\" : \"'100%'\"};\n  //min-width: 30%;\n  border: #282c34 solid 1px;\n  margin: 10px 0;\n  padding: 0 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SelectProdButton = styled.button`\n  width: 30%;\n  margin: auto;\n`;\n\nconst TheButtons = styled.div`\n  width: 100%;\n  display: flex;\n  margin: auto;\n`;\n\nconst ProductPhoto = styled.img`\n  height: 50%;\n  margin: auto;\n  border-radius: 5px;\n`;\n\nconst ModalImg = styled.img`\n  width: 40%;\n  float: left;\n  border-radius: 5px;\n`;\n\nexport default Product;\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport Product from \"../Product/Product\";\nimport emailjs from 'emailjs-com';\n\nconst stuff =\n    [\n        {\n            \"name\": \"Quinoa & Bean Bowl with BBQ Jerked Jackfruit\",\n            \"sides\": [\"Fried Plantains\", \"Salad\"],\n            \"description\": \"...\",\n            \"photo\": \"https://tryveg.com/wp-content/uploads/2018/07/IMG_20180613_150406_086-1024x1024.jpg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Jackfruit Stir Fry\",\n            \"sides\": [\"Sesame Roasted Sweet Potatoes\", \"Roasted Brussel Brussels Sprouts\"],\n            \"description\": \"...\",\n            \"photo\": \"https://i2.wp.com/www.aboutthatfood.com/wp-content/uploads/2017/05/Jackfruit-Stir-Fry-4.jpg?zoom=2&resize=1034%2C770&ssl=1\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Jackfruit Crab Cakes\",\n            \"sides\": [\"Sauteed Veggies\", \"Cranberry and Cilantro Quinoa Salad\" ],\n            \"description\": \"...\",\n            \"photo\": \"https://dizzybusyandhungry.com/wp-content/uploads/2018/09/crab-cakes-3862-2.jpg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Jambalaya\",\n            \"sides\": [\"Cornbread\", \"Southern Style Collard Greens\"],\n            \"description\": \"...\",\n            \"photo\": \"https://simpleveganblog.com/wp-content/uploads/2018/09/Simple-vegan-jambalaya-3.jpg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Carolina Style Vegan 'Pulled BBQ' and Coleslaw\",\n            \"sides\": [\"Chickpea Baked BBQ Beans\",\"Roasted Sweet Potatoes\" ],\n            \"description\": \"...\",\n            \"photo\": \"https://i.pinimg.com/originals/d7/c7/53/d7c753890cf30de32505bb4e8835afbf.jpg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Thanksgiving Day Dinner\",\n            \"sides\": [\n                \"Cornbread Dressing\", \"Jackfruit Turkey\", \"Rice a& Gravy\", \"Cranberry Sauce\"\n            ],\n            \"description\": \"...\",\n            \"photo\": \"https://karmabaker.com/app/uploads/2017/11/B7B893BE-199F-41DF-8010-FEB4F906EC76-600x600.jpeg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Caribbean Curry Jackfruit\",\n            \"sides\": [\"Brown Rice & Beans\", \"Sauteed Greens\"],\n            \"description\": \"...\",\n            \"photo\": \"https://noeggsorham.files.wordpress.com/2017/09/img_2469.jpg?w=1720\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Squash & Zucchini Casserole\",\n            \"sides\": [\"Sauteed Greens\", \"Brown Rice\"],\n            \"description\": \"...\",\n            \"photo\": \"https://www.hamiltonbeach.com/media/recipes/cheesy-zucchini-casserole-3.jpg\",\n            \"type\": \"main\"\n        },\n        {\n            \"name\": \"Quinoa & Lentil Stuffed Peppers\",\n            \"sides\": [\"Sauteed Sweet Potatoes\", \"Roasted Brussel Sprouts\"],\n            \"description\": \"...\",\n            \"photo\": \"http://ripe-life.com/wp-content/uploads/2015/08/lentilandquinoastuffedpeppers7.jpg\"\n        }\n\n    ]\n\n\n\nconst Main = () => {\n\n\n    const [windowWidth, setWidth] = useState(getWidth);\n    const [chosenItems, setFavs] = useState( []);\n    const [userinfo, setUser] = useState({\"name\":\"theName\",\"email\":\"theEmail\"});\n\n    const handleResize = ()=>{\n        console.log(\"window resize\")\n        setWidth(getWidth());\n    };\n    function getWidth() {\n        return window.innerWidth\n    }\n\n    const addToFavs=(item)=> {\n        // chosenItems.push(<li>{item.name}</li>)\n        const items = chosenItems.concat(item.name)\n        console.log(items)\n        setFavs(items)\n    };\n    // console.log(\"chosenItems: \", chosenItems)\n\n    const toggleFav= (fav) =>{\n\n        setFavs(chosenItems.filter(item => item !== fav));\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    const submitFavs = (chosenItems) => {\n        const Info = userinfo\n        const theSubmitInfo = {\"chosen_items\":chosenItems,\"name\":Info[\"name\"],\"email\":Info[\"email\"]}\n        console.log(\"favs submitted\", Info)\n\n\n        emailjs.send('gmail', 'template_VM9IlcIJ', theSubmitInfo, \"user_ii2HeUxvMKEfOyePRTfc8\")\n            .then(function(response) {\n                console.log('SUCCESS!', response.status, response.text);\n            }, function(error) {\n                console.log('FAILED...', error);\n            });\n\n    }\n    const handleInputChange = (e) => {\n        let name = null\n        let email = null\n        console.log(\"input changed\", e.target.value)\n        console.log(\"input id\", e.target.id)\n        e.target.id === \"uName\" ?userinfo[\"name\"] = e.target.value : userinfo[\"email\"]= e.target.value\n        // userinfo[\"name\"]=name\n        setUser(userinfo)\n\n\n    }\n\n    const productList = stuff.map((item) => {\n            return  <Product addToFavs={()=>addToFavs(item)} windowWidth={windowWidth} item={item}/>\n        }\n    );\n\n    return (\n        <TheMainContent width={windowWidth}>\n            <ProductsHeader>\n                <h2>Meals</h2>\n                <p>This is where the instructions will go...</p>\n                <input id=\"uName\" placeholder={\"Your Name\"} onChange={handleInputChange}/>\n                <input id=\"uEmail\" placeholder={\"Your Email\"}  onChange={handleInputChange}/>\n            </ProductsHeader>\n\n            <Products width={windowWidth}  >\n                {productList}\n            </Products>\n\n            <Favs>\n                <FavHeader>\n                    Your Picks\n                </FavHeader>\n                <FavList>\n                    {chosenItems.map((fav)=>\n                        <li onClick={()=>toggleFav(fav)}>\n                            {fav}\n                        </li>\n                    )}\n                </FavList>\n                <SubmitFavsBuuton onClick={()=>submitFavs(chosenItems)}>Submit</SubmitFavsBuuton>\n            </Favs>\n        </TheMainContent>\n    );\n};\n\nconst TheMainContent = styled.div`\n  display: grid;\n  overflow: scroll;\n  grid-template-rows:${props => props.width > 850 ? \"'15% auto'\" : \"'100%'\"};\n  grid-template-areas:${props => props.width > 850 ? \"'pheader cart''products cart''products cart'\" : \"'products'\"};\n  grid-gap: 1% ;\n  height: 90%;\n  grid-template-columns: ${props => {\n      return(props.width > 850 ? \"65% 35%\" : \"100%\")\n      }\n    };\n`;\n\nconst ProductsHeader = styled.div`\n  grid-area: pheader;\n`;\nconst SubmitFavsBuuton = styled.button`\n  width:65%;\n  height:75px;\n  \n  \n`;\n\nconst FavHeader = styled.h2`\n  flex-grow: 1 ;\n`;\n\nconst FavList = styled.ul`\n  margin: 0;\n  padding:0;\n  flex-grow: 14 ;\n`;\n\nconst Products = styled.div`\n  //border: 1px solid orangered;\n  grid-area: products;\n  overflow: scroll;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Favs = styled.div`\n  //border: 1px solid orangered;\n  grid-area: cart;\n  flex-direction:column ;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 12px;\n\n`;\n\nexport default Main;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header/Header\"\nimport styled from 'styled-components'\nimport About from \"./components/About/About\";\nimport Main from \"./components/ProductsAndCart/ProductsAndCart\";\n\nfunction App() {\n  return (\n    <TheApp className=\"App\">\n      <Header/>\n      <Main/>\n    </TheApp>\n  );\n}\n\nconst TheApp = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  width:100%\n  `;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lunch-box.2a1ae021.svg\";"],"sourceRoot":""}